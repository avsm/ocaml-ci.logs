=== opam depext -ivyj 2 coccinelle
[2016-12-23 18:50.06] Starting...
# Detecting depexts using flags: x86_64 linux alpine
# The following system packages are needed:
#  - autoconf
#  - m4
#  - pcre-dev
#  - pkgconfig
m4
pkgconfig
# The following new OS packages need to be installed: autoconf pcre-dev
The following command needs to be run through "sudo":
    apk add autoconf pcre-dev
(1/6) Installing perl (5.22.2-r0)
(2/6) Installing autoconf (2.69-r0)
(3/6) Installing libpcre16 (8.38-r1)
(4/6) Installing libpcre32 (8.38-r1)
(5/6) Installing libpcrecpp (8.38-r1)
(6/6) Installing pcre-dev (8.38-r1)
Executing busybox-1.24.2-r12.trigger
OK: 470 MiB in 88 packages
# OS packages installation successful
# Now letting OPAM install the packages
The following actions will be performed:
  - install conf-python-2-7-dev 1.0                             [required by coccinelle]
  - install menhir              20120123                        [required by coccinelle]
  - install conf-pkg-config     1.0                             [required by coccinelle]
  - install conf-python-2-7     1.0                             [required by coccinelle]
  - install conf-libpcre        1                               [required by pcre]
  - install pcre                7.0.2                           [required by coccinelle]
  - install coccinelle          1.0.0-rc22
===== 7 to install =====

=-=- Gathering sources =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Processing  1/7: [coccinelle.1.0.0-rc22: dl]
Processing  2/7: [coccinelle.1.0.0-rc22: dl]
Processing  3/7: [coccinelle.1.0.0-rc22: dl]
Processing  4/7: [coccinelle.1.0.0-rc22: dl]
Processing  5/7: [coccinelle.1.0.0-rc22: dl]
Processing  6/7: [coccinelle.1.0.0-rc22: dl] [menhir.20120123: dl]
Processing  7/7: [coccinelle.1.0.0-rc22: dl] [menhir.20120123: dl] [pcre.7.0.2: dl]
[menhir.20120123] downloaded from file:///home/opam/opam-repository/cache
Processing  7/7: [coccinelle.1.0.0-rc22: dl] [pcre.7.0.2: dl]
[pcre.7.0.2] downloaded from file:///home/opam/opam-repository/cache
Processing  7/7: [coccinelle.1.0.0-rc22: dl]
[coccinelle.1.0.0-rc22] downloaded from file:///home/opam/opam-repository/cache
Processing  7/7:

=-=- Processing actions -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Processing  1/14: [conf-pkg-config: pkg-config]
Processing  2/14: [conf-pkg-config: pkg-config]
Processing  3/14: [conf-pkg-config: pkg-config] [conf-python-2-7-dev: cc test.c]
+ pkg-config "--help" (CWD=/home/opam/.opam/ocaml-base-compiler.4.04.0/.opam-switch/build/conf-pkg-config.1.0)
- usage: pkgconf [OPTIONS] [LIBRARIES]
- 
- basic options:
- 
-   --help                            this message
-   --about                           print pkgconf version and license to stdout
-   --version                         print supported pkg-config version to stdout
-   --atleast-pkgconfig-version       check whether or not pkgconf is compatible
-                                     with a specified pkg-config version
-   --errors-to-stdout                print all errors on stdout instead of stderr
-   --silence-errors                  explicitly be silent about errors
-   --list-all                        list all known packages
-   --list-package-names              list all known package names
-   --simulate                        simulate walking the calculated dependency graph
-   --no-cache                        do not cache already seen packages when
-                                     walking the dependency graph
- 
- checking specific pkg-config database entries:
- 
-   --atleast-version                 require a specific version of a module
-   --exact-version                   require an exact version of a module
-   --max-version                     require a maximum version of a module
-   --exists                          check whether or not a module exists
-   --uninstalled                     check whether or not an uninstalled module will be used
-   --no-uninstalled                  never use uninstalled modules when satisfying dependencies
-   --maximum-traverse-depth          maximum allowed depth for dependency graph
-   --static                          be more aggressive when computing dependency graph
-                                     (for static linking)
-   --env-only                        look only for package entries in PKG_CONFIG_PATH
-   --ignore-conflicts                ignore 'conflicts' rules in modules
-   --validate                        validate specific .pc files for correctness
- 
- querying specific pkg-config database fields:
- 
-   --define-variable=varname=value   define variable 'varname' as 'value'
-   --variable=varname                print specified variable entry to stdout
-   --cflags                          print required CFLAGS to stdout
-   --cflags-only-I                   print required include-dir CFLAGS to stdout
-   --cflags-only-other               print required non-include-dir CFLAGS to stdout
-   --libs                            print required linker flags to stdout
-   --libs-only-L                     print required LDPATH linker flags to stdout
-   --libs-only-l                     print required LIBNAME linker flags to stdout
-   --libs-only-other                 print required other linker flags to stdout
-   --print-requires                  print required dependency frameworks to stdout
-   --print-requires-private          print required dependency frameworks for static
-                                     linking to stdout
-   --print-variables                 print all known variables in module to stdout
-   --digraph                         print entire dependency graph in graphviz 'dot' format
-   --keep-system-cflags              keep -I/usr/include entries in cflags output
-   --keep-system-libs                keep -L/usr/lib entries in libs output
- 
- report bugs to <http://github.com/pkgconf/pkgconf/issues>.
- usage: pkgconf [OPTIONS] [LIBRARIES]
- 
- basic options:
- 
-   --help                            this message
-   --about                           print pkgconf version and license to stdout
-   --version                         print supported pkg-config version to stdout
-   --atleast-pkgconfig-version       check whether or not pkgconf is compatible
-                                     with a specified pkg-config version
-   --errors-to-stdout                print all errors on stdout instead of stderr
-   --silence-errors                  explicitly be silent about errors
-   --list-all                        list all known packages
-   --list-package-names              list all known package names
-   --simulate                        simulate walking the calculated dependency graph
-   --no-cache                        do not cache already seen packages when
-                                     walking the dependency graph
- 
- checking specific pkg-config database entries:
- 
-   --atleast-version                 require a specific version of a module
-   --exact-version                   require an exact version of a module
-   --max-version                     require a maximum version of a module
-   --exists                          check whether or not a module exists
-   --uninstalled                     check whether or not an uninstalled module will be used
-   --no-uninstalled                  never use uninstalled modules when satisfying dependencies
-   --maximum-traverse-depth          maximum allowed depth for dependency graph
-   --static                          be more aggressive when computing dependency graph
-                                     (for static linking)
-   --env-only                        look only for package entries in PKG_CONFIG_PATH
-   --ignore-conflicts                ignore 'conflicts' rules in modules
-   --validate                        validate specific .pc files for correctness
- 
- querying specific pkg-config database fields:
- 
-   --define-variable=varname=value   define variable 'varname' as 'value'
-   --variable=varname                print specified variable entry to stdout
-   --cflags                          print required CFLAGS to stdout
-   --cflags-only-I                   print required include-dir CFLAGS to stdout
-   --cflags-only-other               print required non-include-dir CFLAGS to stdout
-   --libs                            print required linker flags to stdout
-   --libs-only-L                     print required LDPATH linker flags to stdout
-   --libs-only-l                     print required LIBNAME linker flags to stdout
-   --libs-only-other                 print required other linker flags to stdout
-   --print-requires                  print required dependency frameworks to stdout
-   --print-requires-private          print required dependency frameworks for static
-                                     linking to stdout
-   --print-variables                 print all known variables in module to stdout
-   --digraph                         print entire dependency graph in graphviz 'dot' format
-   --keep-system-cflags              keep -I/usr/include entries in cflags output
-   --keep-system-libs                keep -L/usr/lib entries in libs output
- 
- report bugs to <http://github.com/pkgconf/pkgconf/issues>.
-> compiled  conf-pkg-config.1.0
Processing  3/14: [conf-python-2-7-dev: cc test.c]
Processing  4/14: [conf-python-2-7-dev: cc test.c]
-> installed conf-pkg-config.1.0
Processing  5/14: [conf-python-2-7-dev: cc test.c]
Processing  6/14: [conf-libpcre: pkg-config libpcre] [conf-python-2-7-dev: cc test.c]
+ cc "test.c" (CWD=/home/opam/.opam/ocaml-base-compiler.4.04.0/.opam-switch/build/conf-python-2-7-dev.1.0)
- test.c:1:30: fatal error: python2.7/Python.h: No such file or directory
- compilation terminated.
- test.c:1:30: fatal error: python2.7/Python.h: No such file or directory
- compilation terminated.
Processing  6/14: [conf-libpcre: pkg-config libpcre]
[ERROR] The compilation of conf-python-2-7-dev failed at "cc test.c".
Processing  7/14: [conf-libpcre: pkg-config libpcre] [conf-python-2-7: python2.7 print 'python2.7 is installed']
+ pkg-config "libpcre" (CWD=/home/opam/.opam/ocaml-base-compiler.4.04.0/.opam-switch/build/conf-libpcre.1)
-> compiled  conf-libpcre.1
Processing  7/14: [conf-python-2-7: python2.7 print 'python2.7 is installed']
+ python2.7 "-c" "print 'python2.7 is installed'" (CWD=/home/opam/.opam/ocaml-base-compiler.4.04.0/.opam-switch/build/conf-python-2-7.1.0)

#=== ERROR while installing conf-python-2-7.1.0 ===============================#
Sys_error("/home/opam/.opam/log/conf-python-2-7-1-2c871f.out: No such file or directory")


=-=- Error report -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
+- The following actions were aborted
| - install coccinelle          1.0.0-rc22
| - install conf-libpcre        1         
| - install conf-python-2-7-dev 1.0       
| - install menhir              20120123  
| - install pcre                7.0.2     
+- 
+- The following actions failed
| - install conf-python-2-7 1.0
+- 
+- The following changes have been performed
| - install conf-pkg-config 1.0
+- 

=-=- conf-python-2-7.1.0 troubleshooting =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
=> This package relies on external (system) dependencies that may be missing. `opam depext conf-python-2-7.1.0' may help you find the correct installation for your system.
# Run eval `opam env` to update the current shell environment

The former state can be restored with:
    opam switch import "/home/opam/.opam/ocaml-base-compiler.4.04.0/.opam-switch/backup/state-20161223200007.export"
'opam install --verbose --yes --jobs=2 coccinelle' failed.
[2016-12-23 20:00.16] Failed: Command "docker" "run" "--rm" "--tmpfs" "/tmp" "-v" "opam2-archive:/home/opam/opam-repository/cache" "sha256:8892eb0e54ccf625e1380811877eaba45f2205ea02538f26850ccfcc26cd98e6" "opam" "depext" "-ivyj" "2" "coccinelle" exited with status 4
