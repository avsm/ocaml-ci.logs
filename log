=== opam depext -ivyj 2 cryptokit
[2016-12-23 17:51.30] Starting...
# Detecting depexts using flags: x86_64 linux alpine
# The following system packages are needed:
#  - gmp-dev
#  - m4
#  - perl
#  - pkgconfig
m4
pkgconfig
# The following new OS packages need to be installed: gmp-dev perl
The following command needs to be run through "sudo":
    apk add gmp-dev perl
(1/3) Installing libgmpxx (6.1.0-r0)
(2/3) Installing gmp-dev (6.1.0-r0)
(3/3) Installing perl (5.22.2-r0)
Executing busybox-1.24.2-r12.trigger
OK: 467 MiB in 85 packages
# OS packages installation successful
# Now letting OPAM install the packages
The following actions will be performed:
  - install conf-gmp          1                                 [required by conf-gmp-powm-sec, zarith]
  - install conf-perl         1                                 [required by zarith]
  - install conf-pkg-config   1.0                               [required by conf-zlib]
  - install conf-gmp-powm-sec 1                                 [required by cryptokit]
  - install zarith            1.4.1                             [required by cryptokit]
  - install conf-zlib         1                                 [required by cryptokit]
  - install cryptokit         1.11 
===== 7 to install =====

=-=- Gathering sources =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Processing  6/7: [cryptokit.1.11: dl]
Processing  7/7: [cryptokit.1.11: dl] [zarith.1.4.1: dl]
[zarith.1.4.1] downloaded from file:///home/opam/opam-repository/cache
Processing  7/7: [cryptokit.1.11: dl]
[cryptokit.1.11] downloaded from file:///home/opam/opam-repository/cache
Processing  7/7:

=-=- Processing actions -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Processing  1/14: [conf-gmp: sh]
Processing  2/14: [conf-gmp: sh] [conf-perl: perl]
+ perl "--version" (CWD=/home/opam/.opam/default/.opam-switch/build/conf-perl.1)
- 
- This is perl 5, version 22, subversion 2 (v5.22.2) built for x86_64-linux-thread-multi
- 
- Copyright 1987-2015, Larry Wall
- 
- Perl may be copied only under the terms of either the Artistic License or the
- GNU General Public License, which may be found in the Perl 5 source kit.
- 
- Complete documentation for Perl, including FAQ lists, should be found on
- this system using "man perl" or "perldoc perl".  If you have access to the
- Internet, point your browser at http://www.perl.org/, the Perl Home Page.
- 
- 
- This is perl 5, version 22, subversion 2 (v5.22.2) built for x86_64-linux-thread-multi
- 
- Copyright 1987-2015, Larry Wall
- 
- Perl may be copied only under the terms of either the Artistic License or the
- GNU General Public License, which may be found in the Perl 5 source kit.
- 
- Complete documentation for Perl, including FAQ lists, should be found on
- this system using "man perl" or "perldoc perl".  If you have access to the
- Internet, point your browser at http://www.perl.org/, the Perl Home Page.
- 
-> compiled  conf-perl.1
Processing  2/14: [conf-gmp: sh]
Processing  3/14: [conf-gmp: sh] [conf-pkg-config: pkg-config]
+ pkg-config "--help" (CWD=/home/opam/.opam/default/.opam-switch/build/conf-pkg-config.1.0)
- usage: pkgconf [OPTIONS] [LIBRARIES]
- 
- basic options:
- 
-   --help                            this message
-   --about                           print pkgconf version and license to stdout
-   --version                         print supported pkg-config version to stdout
-   --atleast-pkgconfig-version       check whether or not pkgconf is compatible
-                                     with a specified pkg-config version
-   --errors-to-stdout                print all errors on stdout instead of stderr
-   --silence-errors                  explicitly be silent about errors
-   --list-all                        list all known packages
-   --list-package-names              list all known package names
-   --simulate                        simulate walking the calculated dependency graph
-   --no-cache                        do not cache already seen packages when
-                                     walking the dependency graph
- 
- checking specific pkg-config database entries:
- 
-   --atleast-version                 require a specific version of a module
-   --exact-version                   require an exact version of a module
-   --max-version                     require a maximum version of a module
-   --exists                          check whether or not a module exists
-   --uninstalled                     check whether or not an uninstalled module will be used
-   --no-uninstalled                  never use uninstalled modules when satisfying dependencies
-   --maximum-traverse-depth          maximum allowed depth for dependency graph
-   --static                          be more aggressive when computing dependency graph
-                                     (for static linking)
-   --env-only                        look only for package entries in PKG_CONFIG_PATH
-   --ignore-conflicts                ignore 'conflicts' rules in modules
-   --validate                        validate specific .pc files for correctness
- 
- querying specific pkg-config database fields:
- 
-   --define-variable=varname=value   define variable 'varname' as 'value'
-   --variable=varname                print specified variable entry to stdout
-   --cflags                          print required CFLAGS to stdout
-   --cflags-only-I                   print required include-dir CFLAGS to stdout
-   --cflags-only-other               print required non-include-dir CFLAGS to stdout
-   --libs                            print required linker flags to stdout
-   --libs-only-L                     print required LDPATH linker flags to stdout
-   --libs-only-l                     print required LIBNAME linker flags to stdout
-   --libs-only-other                 print required other linker flags to stdout
-   --print-requires                  print required dependency frameworks to stdout
-   --print-requires-private          print required dependency frameworks for static
-                                     linking to stdout
-   --print-variables                 print all known variables in module to stdout
-   --digraph                         print entire dependency graph in graphviz 'dot' format
-   --keep-system-cflags              keep -I/usr/include entries in cflags output
-   --keep-system-libs                keep -L/usr/lib entries in libs output
- 
- report bugs to <http://github.com/pkgconf/pkgconf/issues>.
- usage: pkgconf [OPTIONS] [LIBRARIES]
- 
- basic options:
- 
-   --help                            this message
-   --about                           print pkgconf version and license to stdout
-   --version                         print supported pkg-config version to stdout
-   --atleast-pkgconfig-version       check whether or not pkgconf is compatible
-                                     with a specified pkg-config version
-   --errors-to-stdout                print all errors on stdout instead of stderr
-   --silence-errors                  explicitly be silent about errors
-   --list-all                        list all known packages
-   --list-package-names              list all known package names
-   --simulate                        simulate walking the calculated dependency graph
-   --no-cache                        do not cache already seen packages when
-                                     walking the dependency graph
- 
- checking specific pkg-config database entries:
- 
-   --atleast-version                 require a specific version of a module
-   --exact-version                   require an exact version of a module
-   --max-version                     require a maximum version of a module
-   --exists                          check whether or not a module exists
-   --uninstalled                     check whether or not an uninstalled module will be used
-   --no-uninstalled                  never use uninstalled modules when satisfying dependencies
-   --maximum-traverse-depth          maximum allowed depth for dependency graph
-   --static                          be more aggressive when computing dependency graph
-                                     (for static linking)
-   --env-only                        look only for package entries in PKG_CONFIG_PATH
-   --ignore-conflicts                ignore 'conflicts' rules in modules
-   --validate                        validate specific .pc files for correctness
- 
- querying specific pkg-config database fields:
- 
-   --define-variable=varname=value   define variable 'varname' as 'value'
-   --variable=varname                print specified variable entry to stdout
-   --cflags                          print required CFLAGS to stdout
-   --cflags-only-I                   print required include-dir CFLAGS to stdout
-   --cflags-only-other               print required non-include-dir CFLAGS to stdout
-   --libs                            print required linker flags to stdout
-   --libs-only-L                     print required LDPATH linker flags to stdout
-   --libs-only-l                     print required LIBNAME linker flags to stdout
-   --libs-only-other                 print required other linker flags to stdout
-   --print-requires                  print required dependency frameworks to stdout
-   --print-requires-private          print required dependency frameworks for static
-                                     linking to stdout
-   --print-variables                 print all known variables in module to stdout
-   --digraph                         print entire dependency graph in graphviz 'dot' format
-   --keep-system-cflags              keep -I/usr/include entries in cflags output
-   --keep-system-libs                keep -L/usr/lib entries in libs output
- 
- report bugs to <http://github.com/pkgconf/pkgconf/issues>.
-> compiled  conf-pkg-config.1.0
Processing  3/14: [conf-gmp: sh]
-> installed conf-perl.1
Processing  4/14: [conf-gmp: sh]
-> installed conf-pkg-config.1.0
Processing  5/14: [conf-gmp: sh]
Processing  6/14: [conf-gmp: sh] [conf-zlib: pkg-config zlib]
+ sh "-exc" "cc -c $CFLAGS -I/usr/local/include test.c" (CWD=/home/opam/.opam/default/.opam-switch/build/conf-gmp.1)
- + cc -c -I/usr/local/include test.c
- test.c: In function 'test':
- test.c:7:2: warning: implicit declaration of function '__gmp_init' [-Wimplicit-function-declaration]
-   __gmp_init();
-   ^
- + cc -c -I/usr/local/include test.c
- test.c: In function 'test':
- test.c:7:2: warning: implicit declaration of function '__gmp_init' [-Wimplicit-function-declaration]
-   __gmp_init();
-   ^
-> compiled  conf-gmp.1
Processing  6/14: [conf-zlib: pkg-config zlib]
-> installed conf-gmp.1
Processing  7/14: [conf-zlib: pkg-config zlib]
Processing  8/14: [conf-gmp-powm-sec: sh] [conf-zlib: pkg-config zlib]
+ pkg-config "zlib" (CWD=/home/opam/.opam/default/.opam-switch/build/conf-zlib.1)
Processing  8/14: [conf-gmp-powm-sec: sh]
[ERROR] The compilation of conf-zlib failed at "pkg-config zlib".
Processing  9/14: [conf-gmp-powm-sec: sh] [zarith: ./configure]
+ sh "-exc" "cc -c $CFLAGS -I/usr/local/include test.c" (CWD=/home/opam/.opam/default/.opam-switch/build/conf-gmp-powm-sec.1)
- + cc -c -I/usr/local/include test.c
- test.c: In function 'test':
- test.c:10:2: warning: implicit declaration of function '__gmp_init' [-Wimplicit-function-declaration]
-   __gmp_init();
-   ^
- + cc -c -I/usr/local/include test.c
- test.c: In function 'test':
- test.c:10:2: warning: implicit declaration of function '__gmp_init' [-Wimplicit-function-declaration]
-   __gmp_init();
-   ^
-> compiled  conf-gmp-powm-sec.1
Processing  9/14: [zarith: ./configure]
-> installed conf-gmp-powm-sec.1
Processing 10/14: [zarith: ./configure]
Processing 11/14: [zarith: ./configure]
+ ./configure  (CWD=/home/opam/.opam/default/.opam-switch/build/zarith.1.4.1)
- binary ocaml: found in /home/opam/.opam/default/bin
- binary ocamlc: found in /usr/bin
- binary ocamldep: found in /usr/bin
- binary ocamlmklib: found in /usr/bin
- binary ocamldoc: found in /usr/bin
- binary ar: found in /usr/bin
- binary perl: found in /usr/bin
- binary gcc: found in /usr/bin
- binary ocamlopt: found in /usr/bin
- checking compilation with gcc -O3 -Wall -Wextra : working
- include caml/mlvalues.h: found
- library dynlink.cmxa: found
- binary ocamlfind: found in /home/opam/.opam/default/bin
- OCaml's word size is 64
- binary uname: found in /bin
- include gmp.h: found
- library gmp: found
- OCaml extended comparison supported
- OCaml new hash functions available
- 
- detected configuration:
- 
-   native-code:          yes
-   dynamic linking:      yes
-   asm path:             x86_64
-   defines:              -DZ_OCAML_HASH -DZ_OCAML_COMPARE_EXT -DHAS_GMP -DZ_ELF -DZ_DOT_LABEL_PREFIX 
-   libraries:             -lgmp
-   C options:            -O3 -Wall -Wextra 
-   asm options           
-   installation path:    /home/opam/.opam/default/lib
-   installation method   findlib
- 
- configuration successful!
- now type "make" to build
- then type "make install" or "sudo make install" to install
Processing 11/14: [zarith: make]
+ make  (CWD=/home/opam/.opam/default/.opam-switch/build/zarith.1.4.1)
- project.mak:137: depend: No such file or directory
- ./z_pp.pl x86_64
- found assembly file caml_z_x86_64.S
-   found abs
-   found add
-   found div
-   found divexact
-   found logand
-   found lognot
-   found logor
-   found logxor
-   found mul
-   found neg
-   found pred
-   found rem
-   found shift_left
-   found shift_right
-   found sub
-   found succ
- ocamldep -native  *.ml *.mli > depend
- ocamlc   -c z.mli
- ocamlc   -c z.ml
- ocamlc   -c q.mli
- ocamlc   -c q.ml
- ocamlc   -c big_int_Z.mli
- ocamlc   -c big_int_Z.ml
- ocamlmklib -failsafe -o zarith z.cmo q.cmo big_int_Z.cmo -lgmp
- gcc -DZ_OCAML_HASH -DZ_OCAML_COMPARE_EXT -DHAS_GMP -DZ_ELF -DZ_DOT_LABEL_PREFIX     -c -o caml_z_x86_64.o caml_z_x86_64.S
- ocamlc -ccopt "-I/usr/lib/ocaml  -DZ_OCAML_HASH -DZ_OCAML_COMPARE_EXT -DHAS_GMP -DZ_ELF -DZ_DOT_LABEL_PREFIX  -O3 -Wall -Wextra " -c caml_z.c
- ocamlmklib -failsafe -o zarith caml_z_x86_64.o caml_z.o -lgmp
- ocamlopt   -c z.ml
- ocamlopt   -c q.ml
- ocamlopt   -c big_int_Z.ml
- ocamlmklib -failsafe -o zarith z.cmx q.cmx big_int_Z.cmx -lgmp
- ocamlopt -shared -o zarith.cmxs -I . zarith.cmxa
-> compiled  zarith.1.4.1
Processing 12/14: [zarith: make install]
+ make "install" (CWD=/home/opam/.opam/default/.opam-switch/build/zarith.1.4.1)
- ocamlfind install -destdir "/home/opam/.opam/default/lib" zarith META zarith.h zarith.cma libzarith.a z.mli q.mli big_int_Z.mli z.cmi q.cmi big_int_Z.cmi zarith.a zarith.cmxa zarith.cmxs dllzarith.so
- Installed /home/opam/.opam/default/lib/zarith/zarith.cmxs
- Installed /home/opam/.opam/default/lib/zarith/zarith.cmxa
- Installed /home/opam/.opam/default/lib/zarith/zarith.a
- Installed /home/opam/.opam/default/lib/zarith/big_int_Z.cmi
- Installed /home/opam/.opam/default/lib/zarith/q.cmi
- Installed /home/opam/.opam/default/lib/zarith/z.cmi
- Installed /home/opam/.opam/default/lib/zarith/big_int_Z.mli
- Installed /home/opam/.opam/default/lib/zarith/q.mli
- Installed /home/opam/.opam/default/lib/zarith/z.mli
- Installed /home/opam/.opam/default/lib/zarith/libzarith.a
- Installed /home/opam/.opam/default/lib/zarith/zarith.cma
- Installed /home/opam/.opam/default/lib/zarith/zarith.h
- Installed /home/opam/.opam/default/lib/zarith/META
- Installed /home/opam/.opam/default/lib/stublibs/dllzarith.so
- Installed /home/opam/.opam/default/lib/stublibs/dllzarith.so.owner
- ocamlfind: [WARNING] You have installed DLLs but the directory /home/opam/.opam/default/lib/stublibs is not mentioned in ld.conf
-> installed zarith.1.4.1

#=== ERROR while compiling conf-zlib.1 ========================================#
# command              pkg-config zlib
# path                 /home/opam/.opam/default/.opam-switch/build/conf-zlib.1
# exit-code            1
# env-file             /home/opam/.opam/log/conf-zlib-1-e4db2f.env
# output-file          /home/opam/.opam/log/conf-zlib-1-e4db2f.out



=-=- Error report -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
+- The following actions were aborted
| - install cryptokit 1.11
+- 
+- The following actions failed
| - build conf-zlib 1
+- 
+- The following changes have been performed
| - install conf-gmp          1    
| - install conf-gmp-powm-sec 1    
| - install conf-perl         1    
| - install conf-pkg-config   1.0  
| - install zarith            1.4.1
+- 

=-=- conf-zlib.1 troubleshooting =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
=> This package relies on external (system) dependencies that may be missing. `opam depext conf-zlib.1' may help you find the correct installation for your system.
# Run eval `opam env` to update the current shell environment

The former state can be restored with:
    opam switch import "/home/opam/.opam/default/.opam-switch/backup/state-20161223180745.export"
'opam install --verbose --yes --jobs=2 cryptokit' failed.
[2016-12-23 18:07.54] Failed: Command "docker" "run" "--rm" "--tmpfs" "/tmp" "-v" "opam2-archive:/home/opam/opam-repository/cache" "sha256:cfbeef9d775638d0b94a878f95261d5f7c85e15274df23042f44dfae382a7975" "opam" "depext" "-ivyj" "2" "cryptokit" exited with status 4
